package org.modelix.model.mpsplugin

import java.awt.Color
import java.awt.Component
import java.awt.Font
import java.awt.Graphics
import java.awt.Graphics2D
import java.awt.RenderingHints
import java.awt.geom.RoundRectangle2D
import javax.swing.Icon

/*Generated by MPS */
class LetterInSquareIcon @JvmOverloads constructor(
    private val letter: String,
    private val fontSize: Int,
    private val offsetX: Float,
    private val offsetY: Float,
    private val backgroundColor: Color = Color.BLACK,
    private val foregroundColor: Color = Color(200, 200, 200)
) : Icon {
    public override fun paintIcon(p0: Component, g_: Graphics, x: Int, y: Int) {
        val g: Graphics2D = g_.create() as Graphics2D
        try {
            g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)
            g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON)
            g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON)
            g.setColor(backgroundColor)
            g.fill(
                RoundRectangle2D.Double(
                    x.toDouble(),
                    y.toDouble(),
                    getIconWidth().toDouble(),
                    getIconHeight().toDouble(),
                    5.0,
                    5.0
                )
            )
            g.setFont(Font("Arial", Font.BOLD, fontSize))
            g.setColor(foregroundColor)
            g.drawString(letter, x + offsetX, y + offsetY)
        } finally {
            g.dispose()
        }
    }

    public override fun getIconWidth(): Int {
        return 16
    }

    public override fun getIconHeight(): Int {
        return 16
    }
}
