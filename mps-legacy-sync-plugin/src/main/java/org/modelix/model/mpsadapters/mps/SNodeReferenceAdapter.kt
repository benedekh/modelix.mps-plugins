package org.modelix.model.mpsadapters.mps

import org.jetbrains.mps.openapi.model.SNodeReference
import org.modelix.model.api.INode
import org.modelix.model.api.INodeReference
import org.modelix.model.area.IArea

/*Generated by MPS */
class SNodeReferenceAdapter(ref: SNodeReference) : INodeReference {
    private val ref: SNodeReference?

    init {
        this.ref = ref
    }

    fun getReference(): SNodeReference? {
        return ref
    }

    override fun resolveNode(area: IArea?): INode? {
        return area!!.resolveNode(this)
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || this.javaClass != o.javaClass) {
            return false
        }
        val that: SNodeReferenceAdapter = o as SNodeReferenceAdapter
        return !(if (ref != null) !((ref == that.ref)) else that.ref != null)
    }

    override fun hashCode(): Int {
        var result: Int = 0
        result = 31 * result + ((if (ref != null) (ref as Any).hashCode() else 0))
        return result
    }

    override fun toString(): String {
        return "SNodeReferenceAdapter{" + "ref=" + ref + "}"
    }
}
